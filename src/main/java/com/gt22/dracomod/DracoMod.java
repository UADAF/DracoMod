package com.gt22.dracomod;

import com.gt22.dracomod.items.Draco;
import com.gt22.dracomod.proxy.CommonProxy;
import com.gt22.dracomod.utils.DracoConfig;
import com.gt22.dracomod.utils.R;
import com.gt22.gt22core.interfaces.IMod;
import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPostInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.event.FMLServerStartingEvent;
import net.minecraft.client.settings.KeyBinding;
import net.minecraft.creativetab.CreativeTabs;
import net.minecraft.init.Items;
import net.minecraft.item.Item;
import net.minecraft.util.DamageSource;
import org.apache.logging.log4j.Logger;

import java.util.List;

@Mod(modid = R.modID, name = R.modName, version = R.modVersion, dependencies = R.modDependensies)
public class DracoMod implements IMod {

	private static final CreativeTabs tab = new CreativeTabs("DracoMod") {
		@Override
		public Item getTabIconItem() {
			return Items.apple;
		}
	};
	public static final DamageSource dracoDamage = new DamageSource("dracoDamage").setDamageBypassesArmor();
	@Mod.Instance(R.modID)
	public static DracoMod modInstance;
	@SidedProxy(serverSide = R.modProxy + "CommonProxy", clientSide = R.modProxy + "ClientProxy", modId = R.modID)
	public static CommonProxy modProxy;

	public static Logger modLog;

	@Mod.EventHandler
	public void preInit(FMLPreInitializationEvent e) {
		modLog = e.getModLog();
        DracoConfig.init(e.getSuggestedConfigurationFile());
		modProxy.preInit(e);
	}

	@Mod.EventHandler
	public void init(FMLInitializationEvent e) {
		modProxy.init(e);
	}

	@Mod.EventHandler
	public void postInit(FMLPostInitializationEvent e) {
		modProxy.postInit(e);
	}

	@Mod.EventHandler
	public void serverStarting(FMLServerStartingEvent e){
	}

	public void initMetadata(ModMetadata data) {
		data.autogenerated = false;
		data.modId = R.modID;
		data.name = R.modName;
		data.version = R.modVersion;
	}

	@Override
	public CreativeTabs[] getCreativeTabs() {
		return new CreativeTabs[]{tab};
	}

	@Override
	public String getModid() {
		return R.modID;
	}
}
